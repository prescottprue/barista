stages:
  - build
  - unit_tests
  - deploy_staging
  - e2e_tests
  - deploy_production

# Build Stage
# Installs dependencies, builds app, and saves results for later (artifacts).
# 1. Install dependencies for React App and Cloud Functions using Yarn. Installing of
# cypress binary is skipped (done in E2E Testing Stage)
# 2. Build environment specific config file in src/config.js
# 3. Confirm there is no lint within code (after config is injected for import linting)
# 4. Build React app to dist folder
# 5. Preserve build results and dependencies for future jobs in the pipeline
Build:
  stage: build
  image: node:6.14.0
  when: always
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-build/
  cache:
    paths:
      - node_modules # NPM packages
      - functions/node_modules
      - .yarn
  artifacts:
    expire_in: 2 weeks
    paths:
      - node_modules # keep as artifact for future jobs (cache didn't share between jobs)
      - functions/node_modules # keep as artifact for future jobs (cache didn't share between jobs)
      - dist
      - functions/dist
  variables:
    CYPRESS_INSTALL_BINARY: 0 # skip installing cypress binary
  script:
    - yarn config set cache-folder .yarn
    - yarn install
    - yarn install --cwd functions
    - yarn add firebase-ci
    - npm run build:config # create env specific src/config.js
    - npm run lint
    - npm run build

# Unit Testing Stage
# Run unit tests for Cloud Functions
# NOTE: Cache was not used for node_modules since function deps were not perserving
Unit Tests:
  stage: unit_tests
  image: node:6.14.0
  when: on_success
  allow_failure: true
  except:
    refs:
      - prod
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-tests/
      - $CI_COMMIT_MESSAGE =~ /skip-unit-tests/
  # Did not load function node modules from previous job
  # cache:
  #   policy: pull # only pull cache, skip uploading
  #   paths:
  #     - node_modules # NPM packages
  #     - functions/node_modules
  #     - .yarn
  # artifacts:
  #   expire_in: 2 weeks
  #   paths:
  #     - functions/mochawesome-report
  script:
    - npm run test --prefix functions

# Deploy Staging
# Deploy React App and Cloud Functions
Deploy Staging:
  stage: deploy_staging
  image: node:6.14.0
  environment:
    name: staging
    url: https://barista-stage.firebaseapp.com
  when: on_success
  only:
    - master
    - web
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-deploy/
      - $CI_COMMIT_MESSAGE =~ /skip-stage-deploy/
  variables:
    TRAVIS_BRANCH: master # workaround to get firebase-ci to use config for stage from .firebaserc
  script:
    - npm run deploy

# End To End Tests
# Install Cypress binary and run end to end tests using Cypress
E2E Tests:
  stage: e2e_tests
  image: cypress/base
  environment:
    name: staging
    url: https://barista-stage.firebaseapp.com
  when: on_success
  allow_failure: true
  only:
    - master
    - web
    - schedules
  cache:
    paths:
      - .cache/Cypress
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-tests/
      - $CI_COMMIT_MESSAGE =~ /skip-e2e-tests/
  artifacts:
    expire_in: 2 weeks
    paths:
      - cypress/videos
      - cypress/screenshots
  script:
    - yarn add --dev cypress # install Cypress so that binary is grabbed (skipped in build stage)
    - $(npm bin)/cypress verify # Confirm Cypress is ready to use
    - echo "Creating cypress.env.json..."
    - $(npm bin)/babel-node build/ci/createTestEnvFile # Create environment specific test config including auth token
    - echo "cypress.env.json created successfully. Calling test run..."
    - npm run test:stage # Run E2E Tests through Cypress

# Deploy Production
# 1. Commit
# 2. Deploy React App and Cloud Functions to production environment (https://fireadmin.io)
Deploy Production:
  stage: deploy_production
  image: node:6.14.0
  environment:
    name: production
    url: https://barista-836b4.firebaseapp.com
  when: manual
  only:
    - master
    - web
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-deploy/
      - $CI_COMMIT_MESSAGE =~ /skip-prod-deploy/
  artifacts:
    expire_in: 2 weeks
    paths:
      - dist
  variables:
    TRAVIS_BRANCH: prod # workaround to get firebase-ci to use config for stage from .firebaserc
  script:
    - git checkout prod
    - git merge --no-ff master
    - npm run clean # remove existing dist folder
    - npm run build:config # create env specific src/config.js
    - npm run build # rebuild bundle with new config
    - npm run deploy
