service cloud.firestore {
  match /databases/{database}/documents {
    // User is logged in and approved (has approved: true)
    function isApprovedUser() {
      return request.auth.uid != null
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.approved == true;
    }
    function isOwner(res) {
      return res.data.createdBy == request.auth.uid
    }
    function isOwnerOrPublic(res) {
      return isOwner(res) || res.data.public == true
    }
    // Private user profiles
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId && isApprovedUser();
    }
    // Public user profiles
    match /users_public/{userId} {
      allow read;
      allow write: if false; // only written to by indexUser cloud function
    }
    // Projects
    match /projects/{projectId} {
      // Only projects you own can be viewed
      allow create: if isApprovedUser() && isOwner(request.resource);
      allow read, write: if isApprovedUser() && isOwnerOrPublic(resource);
      // Rules apply to all child collections
      match /{allChildren=**} {
        allow read, write: if isApprovedUser() && isOwnerOrPublic(get(/databases/$(database)/documents/projects/$(projectId)));
      }
    }
    // Container build info
    match /container_builds/{buildId} {
      // Only logged in users can read container builds (writing is done by onCloudBuildEvent function)
      allow read: if isApprovedUser();
      // Rules apply to all child collections
      match /{allChildren=**} {
        allow read: if isApprovedUser();
      }
    }
    // Test Group Tags
    match /tags/{tagId} {
      // Only logged in users can view/edit tags
      allow read, write: if isApprovedUser();
      // Rules apply to all child collections
      match /{allChildren=**} {
        allow read, write: if isApprovedUser();
      }
    }
    // Test Groups
    match /test_groups/{tagGroupId} {
      // Only logged in users can view/edit tags groups
      allow read, write: if isApprovedUser();
      // Rules apply to all child collections
      match /{allChildren=**} {
        allow read, write: if isApprovedUser();
      }
    }
  }
}
