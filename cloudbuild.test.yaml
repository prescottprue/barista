steps:
# Unencrypt cypress/config.json.enc using Cloud KMS
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=build/enc/config.json.enc
  - --plaintext-file=cypress/config.json
  - --location=global
  - --keyring=first
  - --key=keyOne
# Unencrypt serviceAccount.json.enc using Cloud KMS
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=build/enc/serviceAccount.json.enc
  - --plaintext-file=serviceAccount.json
  - --location=global
  - --keyring=first
  - --key=keyOne
# Build Barista E2E Test Image
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '--build-arg',
    'build_id=$BUILD_ID',
    '-t',
    'gcr.io/$PROJECT_ID/test-barista:$COMMIT_SHA',
    '-t',
    'gcr.io/$PROJECT_ID/test-barista:$BRANCH_NAME',
    '-f',
    'cypress/Dockerfile',
    '.'
  ]
  env: [
    'BUILD_ID=$BUILD_ID',
    'BRANCH_NAME=$BRANCH_NAME',
    'PROJECT=$PROJECT_ID',
    'STAGE_FIREBASE_PROJECT_ID=barista-stage',
    'PROD_FIREBASE_PROJECT_ID=barista-836b4'
  ]
  timeout: 500s
# Push Barista E2E Test Image To Container Registry (For Use In Barista)
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    echo "This step only pushes the latest image if this build was triggered by a push to master, otherwise it pushes branchname tag"
    if "$BRANCH_NAME" == "master"; then docker push gcr.io/$PROJECT_ID/test-barista; else gcr.io/$PROJECT_ID/test-barista:$BRANCH_NAME;
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['push', 'gcr.io/$PROJECT_ID/test-barista']
#   timeout: 500s
images: ['gcr.io/$PROJECT_ID/test-barista']
