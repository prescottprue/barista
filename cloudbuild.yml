steps:
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=cypress/config.json.enc
  - --plaintext-file=cypress/config.json
  - --location=global
  - --keyring=first
  - --key=keyOne
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=serviceAccount.json.enc
  - --plaintext-file=serviceAccount.json
  - --location=global
  - --keyring=first
  - --key=keyOne
# - name: gcr.io/cloud-builders/gcloud
#   args:
#   - kms
#   - decrypt
#   - --ciphertext-file=serviceAccount.json.enc
#   - --plaintext-file=serviceAccount.json
#   - --location=global
#   - --keyring=first
#   - --key=keyOne
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['build', '-t', 'gcr.io/$PROJECT_ID/barista', '.']
#   timeout: 500s
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/test-barista', '-f', 'Dockerfile.test', '.']
  env: [
    'STAGE_FIREBASE_PROJECT_ID=barista-stage',
    'PROD_FIREBASE_PROJECT_ID=barista-836b4'
  ]
  timeout: 500s
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/test-barista']
  timeout: 500s
# images: ['gcr.io/$PROJECT_ID/barista', 'gcr.io/$PROJECT_ID/test-barista']
images: ['gcr.io/$PROJECT_ID/test-barista']
