steps:
# Unencrypt cypress/config.json.enc using Cloud KMS
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=build/enc/config.json.enc
  - --plaintext-file=cypress/config.json
  - --location=global
  - --keyring=first
  - --key=keyOne
# Unencrypt serviceAccount.json.enc using Cloud KMS
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=build/enc/serviceAccount.json.enc
  - --plaintext-file=serviceAccount.json
  - --location=global
  - --keyring=first
  - --key=keyOne
# Build Barista App Image
# TODO: Uncomment this step once using app image. We don't currently since we
# deploy directly to Firebase since we don't have a good way of emulating
# RTDB, Firestore, and Functions.
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['build', '-t', 'gcr.io/$PROJECT_ID/barista', '.']
#   timeout: 500s
# Build Barista E2E Test Image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/test-barista', '-f', 'cypress/Dockerfile', '.']
  env: [
    'STAGE_FIREBASE_PROJECT_ID=barista-stage',
    'PROD_FIREBASE_PROJECT_ID=barista-836b4'
  ]
  timeout: 500s
# Push Barista E2E Test Image To Container Registry (For Use In Barista)
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/test-barista']
  timeout: 500s
images: ['gcr.io/$PROJECT_ID/test-barista']
